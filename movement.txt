 # SETUP

# Importing Modules

import time
import RPi.GPIO as GPIO

# GPIO Settings
Gpio.setwarnings(False)
GPIO.setmode(GPIO.BOARD)

#Labelling all pins but GRND as output
GPIO.setup(29,GPIO.OUT) #29 purple - R fward
                        #30 black - GRND
GPIO.setup(31,GPIO.OUT) #31 orange - R bward
GPIO.setup(32,GPIO.OUT) #32 grey - L fward
GPIO.setup(33,GPIO.OUT) #33 brown - L fward

# Establishing class/objects/Attributes/Mothods
#class. obj's & attr.'s
class Robot:
      def __init__(self, name, rwheel, lwheel):
          self.name = name
          getting GPIO #'s in sets for R & L
          self.rwheel = tuple(rwheel)
          self.lwheel = tuple(lwheel)

          #identifying indv #'s as ints
          self.rwheel_f = int(rwheel[0])
          self.rwheel_b = int(rwheel[1]

          self.lwheel_f = int(rwheel[0]
          self.lwheel_b = int(rwheel[1]

        #methods
        def forward(self, sec):
               GPIO.output(self.rwheel_f, True)
               GPIO.output(self.lwheel_f, True)
               #stop
               time.sleep(sec)
               GPIO.output(self.rwheel_f, False)
               GPIO.output(self.lwheel_f, False)
 
        def backward(self, sec):
               GPIO.output(self.rwheel_b, True)
               GPIO.output(self.lwheel_b, True)
               #stop
               time.sleep(sec)
               GPIO.output(self.rwheel_b, False)
               GPIO.output(self.lwheel_b, False)

        def lturn(self, sec):
               GPIO.output(self.rwheel_f, True)
               #stop
               time.sleep(sec)
               GPIO.output(self.rwheel_f, False)
 
         def rturn(self, sec):
               GPIO.output(self.lwheel_f, True)
               #stop
               time.sleep(sec)
               GPIO.output(self.lwheel_f, False)
            
#Establishing obj
robby = Robot("robby", (29,31), (32,33))
#test print
#print(robby.name, robby.rwheel, robby.lwheel, robby.rwheel_f, 

robby.forward(3)
robby.backward(3)
robby.lturn(3)
robby.rturn(3)
exit()